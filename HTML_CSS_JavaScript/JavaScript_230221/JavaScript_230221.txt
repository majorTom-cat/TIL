자바스크립트는 세미콜론을 생략해도 오류가 뜨진 않음

자바와 자바스크립트의 차이점
https://velog.io/@peration/%EC%9E%90%EB%B0%94%EC%99%80-%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8%EC%9D%98-%EC%B0%A8%EC%9D%B4%EC%A0%90
https://developerpitstop.com/why-do-java-and-javascript-have-a-similar-name/
https://www.java.com/ko/download/help/java_javascript.html

var과 let의 사용 차이
https://poiemaweb.com/es6-block-scope
https://www.freecodecamp.org/korean/news/var-let-constyi-caijeomeun/
https://velog.io/@dev_dowon/JS-%EC%84%A0%EC%96%B8%EC%9E%90-%EC%97%B0%EA%B5%AC#let---%EC%97%B0%EA%B5%AC-1--%EC%84%A0%EC%96%B8-%EB%B0%8F-%ED%95%A0%EB%8B%B9
결론 : 헷갈리면 let, const만 쓰자

자바스크립트는 ES6에서 도입된 let, const를 포함하여 모든 선언(var, let, const, function, function*, class)을 호이스팅한다.
호이스팅(Hoisting)이란, var 선언문이나 function 선언문 등을 해당 스코프의 선두로 옮긴 것처럼 동작하는 특성을 말한다.
하지만 var 키워드로 선언된 변수와는 달리 let 키워드로 선언된 변수를 선언문 이전에 참조하면 참조 에러(ReferenceError)가 발생한다.
이는 let 키워드로 선언된 변수는 스코프의 시작에서 변수의 선언까지 일시적 사각지대(Temporal Dead Zone; TDZ)에 빠지기 때문이다.
변수는 선언 -> 초기화 -> 할당 의 세 단계에 걸쳐 생성되며 var 변수는 이 세 단계가 한번에 이루어짐.

window.alert("Hello JavaScript .. !");
브라우저 객체중 window : 웹브라우저 자체를 가리킴.

document.write('Hello JS!')
브라우저 전체를 window 객체. 하위에 웹페이지 문서에 출력하는 공간을 document
브라우저 내장 객체 라고 함

자바스크립트 언어 특징
1. 객체기반의 스크립트 언어(객체 정의 가능, 브라우저 내장 객체)
    브라우저 내장 객체 : window, document, location, history, Navogator(뒤로가기, 앞으로가기), Screen 등
2. 동적이며 타입을 명시할 필요가 없는(interpreter) 스크립트 언어이다.
    정적요소 : html, css, image
    동적요소 : JavaScript(실행중에 변화를 줄 수 있다.)
참고)
Compiler 언어 - 선언문(데이터 타입). int a;
Interpreter 언어 - 별도의 선언문을 사용하지 않는다. var a, const a, let a
	const : 상수. 초기화 후 변경안됨
	let : 지역변수 만들고싶을때(특정 블럭 { } 안에서 사용)
	var : 그 외
3. 객체지향형 프로그래밍과 함수형 프로그래밍을 모두 사용할 수 있다.

10e6 10의 6승

자바에선 'a' 문자 하나밖에 못썻지만 자바스크립트는 'dsadsadsa'도 가능. " ' 구분하지 않음

부등호는 한글값도 비교해줌. 가 > 하 => false

getDate() 는 일을 표시. getDay() 는 요일임 (일~토:0~6)

배열
리터랄 방식. 상수를 대입해 배열을 만듦
var array = [253, 'fasd', true, function(), {}, [32132, 323] ]; 타입이 다 달라도 됨

prompt로 입력받은건 다 문자로 취급

parseInt, prompt 다 window 객체가 제공하는 것들
parseFloot : 수치로된 문자열을 실수형으로 변환

[문제] 임의의 두 수를 입력받아 작은수에서 큰수까지 구구단 출력

<body> 에서
<p id="text"> 구구단 출력</p>
str 에 태그들을 다 += 한 뒤 (ex : str += "<tr>";)
var gugudan = document.getElementById("text");
gugudan.innerHTML = str;
gugudan.innerText = str; ==> 다 텍스트 형태로 출력해버림

<script> 는 일반적으로 head에 넣지만 body에 넣어도 됨

var은 함수나 그 내부 범위

익명함수는 일회성으로 사용할때 주로 씀

함수
1. 익명함수 : 함수 이름이 없이 정의하는 함수
2. 선언적 함수 : 함수 이름을 명시하여 정의하는 함수
3. 화살표 함수 : => 를 사용하여 정의하는 함수

보통 head에 함수 정의. body에서 호출
https://velog.io/@takeknowledge/script-%ED%83%9C%EA%B7%B8%EB%8A%94-%EC%96%B4%EB%94%94%EC%97%90-%EC%9C%84%EC%B9%98%ED%95%B4%EC%95%BC-%ED%95%A0%EA%B9%8C%EC%9A%94

5 globalNum
{} 내부의 num이 선언되기 전이므로 undefined
var은 함수 내부에 존재하느냐 바깥에 전역변수처럼 존재하느냐 차이
var은 함수 내부에 있는것이 우선적용

var 같은 선언문 없으면 무조건 전역변수

변수
num = 10 : 전역변수(만들어진 이후 어디서든 사용 가능)
var num = 10 : 함수 외부에서 선언하면 전역변수, 함수 내부에서 선언하면 함수내부에서만 사용가능한 지역변수가 된다.
let num = 10 : 선언된 블록 내부에서만 사용가능하고 해당 블록을 벗어나면 소멸된다.

아까 구구단 만들 때 이런식으로 최소값 최대값을 구분했는데,
let 변수 선언이 바깥에 있어도 돌아갔습니다. 선언을 꼭 블록 안에만 해야 하나요??

let mm = "";

if(num1 > num2) {
	mm = num2;
	num2 = num1;
	num1 = mm;
}
변수를 사용하기 전에 선언만 해주시면 위치는 크게 상관없습니다. 다만 사용하기 전 위에 꼭 먼저 작성해주셔야 합니다

var가 함수 내부에서 선언하면 함수내부에서만 사용가능한 지역변수라 하셨는데
아까 반복문안에 var사용하고나서도
밖에서 그 값이 계속 유지가 되지 않았나요..?

scope(중괄호 ) 단위로 var가 지역변수가 작용되는 것이 아닌, function(큰 범위)의 단위로 지역변수로서 선언 됩니다

변수 선언이 헷갈리면 let 쓰자. 함수 바깥에서 선언되면 전역변수로 쓸 수 있으니까.

프론트 개발자가 아니면 객체개념 자주 쓰진 않음

객체 = 속성 + 메소드(함수). 자바스크립트에선 필드라는 용어 대신 속성 사용

브라우저 객체 : window, document, location, history ...
표준객체 : Date, Number, Math, String, Array

Number 객체 : 숫자를 다루는 객체(실수 정수 따로 구분없음)

push() : 하나 이상의 요소를 배열의 가장 마지막에 추가하고, 배열의 총 길이를 반환함.
pop() : 배열의 가장 마지막 요소를 제거하고, 그 제거된 요소를 반환함.
shift() : 배열의 가장 첫 요소를 제거하고, 그 제거된 요소를 반환함.
unshift() : 하나 이상의 요소를 배열의 가장 앞에 추가하고, 배열의 총 길이를 반환함.
reverse() : 배열 요소의 순서를 전부 반대로 교체함.
sort() : 해당 배열의 배열 요소들을 알파벳 순서에 따라 정렬함.
splice() : 기존의 배열 요소를 제거하거나 새로운 배열 요소를 추가하여 배열의 내용을 변경함.

네이버 api는 사실 배울 필요가 없다고 생각함

자바스크립트에서의 문자열 (큰 따옴표나 작은 따옴표나 자바스크립트에선 동일하게 취급)
var str = "abc"; // 'abc'
var str = new String("abc");

등호 두개짜리는 값만 비교
등호 세개짜리는 값과 타입 체크

13 ex
onclick : 이벤트 핸들러

[문제] 주민번호 검사
가중치
2 3 4 5 6 7  8 9 2 3 4 5
<검사>
1. 앞자리 6자리, 뒷자리 7자리
2. 숫자만 입력
3. 주민번호 양식에 맞는지
4. 1, 2, 3 다 맞으면 경고창으로 메세지 출력

아이디 비번 비번확인 주민번호 성별 전화번호 이메일 취미 자기소개 등 체크 (체크박스는 내일 설명. 하나의 값에 배열형태로 저장될것)
